# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1. What is the average tempo of the top 10 songs?
SELECT AVG(tempo) as avg_tempo
FROM BIT_DB.Spotifydata
WHERE id <= 10;

#2. What is the average popularity of the artists with the 5 longest songs? What about the top 5 shortest songs?
SELECT AVG(popularity) as average_popularity
FROM (
    SELECT artist_name, popularity, duration_ms
    FROM Spotifydata
    ORDER BY duration_ms DESC
    LIMIT 5
)as longest_songs;

SELECT AVG(popularity) as average_popularity
FROM (
    SELECT artist_name, popularity, duration_ms
    FROM Spotifydata
    ORDER BY duration_ms asc
    LIMIT 5
)as shortest_songs;

#3. What is the energy for each track?
SELECT track_name, energy as energy
FROM Spotifydata
GROUP BY track_name
ORDER BY energy desc;

